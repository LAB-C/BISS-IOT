(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global,__dirname){
/**
 * Copyright 2018 The onitjs Authors
 * This file is part of the onitjs library.
 *
 * The onitjs library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The onitjs library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with the go-klayton library. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @file index.js
 * @author Hoonil Kim <satoshi.kim@groundx.xyz>
 * @date 2018
 */

global.rootRequire = (name) => require(`${__dirname}/packages/${name}/src/index.js`)

const { packageInit, providers } = rootRequire('onit-core')
const Eth = rootRequire('onit-eth')
const Net = rootRequire('onit-net')
const Method = rootRequire('onit-net')
const utils = rootRequire('onit-utils')
const formatters = rootRequire('onit-core-helpers').formatters

const { version } = require('./package.json')

function Onit(provider, net) {
  // sets _requestmanager etc
  packageInit(this, [provider, net])

  this.version = version
  this.utils = utils
  this.formatters = formatters
  this.Method = Method

  // ex) call `onit.eth.property` || `onit.eth.method(...)`
  this.eth = new Eth(this)

  // overwrite package setProvider
  const setProvider = this.setProvider
  this.setProvider = (provider, net) => {
    setProvider.apply(this, [provider, net])
    this.eth.setProvider(provider, net)
    return true
  }
}

Onit.providers = providers

module.exports = Onit
module.exports.formatters = formatters

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},"/")
},{"./package.json":2}],2:[function(require,module,exports){
module.exports={
  "name": "onit-js",
  "version": "0.0.1c",
  "description": "TBA",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "onit"
  ],
  "author": "nujabes403",
  "license": "ISC",
  "dependencies": {
    "any-promise": "1.3.0",
    "bn.js": "4.11.6",
    "crypto-browserify": "3.12.0",
    "eth-lib": "0.1.27",
    "ethjs-unit": "0.1.6",
    "eventemitter3": "1.1.1",
    "number-to-bn": "1.7.0",
    "oboe": "2.1.3",
    "randomhex": "0.1.5",
    "scrypt.js": "0.2.0",
    "underscore": "^1.9.1",
    "utf8": "2.1.1",
    "uuid": "2.0.1",
    "websocket": "git://github.com/frozeman/WebSocket-Node.git#browserifyCompatible",
    "xhr2": "0.1.4"
  },
  "devDependencies": {
    "babel-eslint": "^8.2.6",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^17.0.0",
    "eslint-plugin-import": "^2.13.0",
    "eslint-plugin-jsx-a11y": "^6.1.1",
    "eslint-plugin-react": "^7.10.0"
  }
}

},{}]},{},[1]);
